[project]
name = "time-series"
version = "0.1.0"
description = "Time-series supergroup"
readme = "README.md"
requires-python = ">=3.13"
license = "MIT"
dependencies = [
    "fastapi>=0.118.0",
    "pydantic>=2.11.10",
    "sqlmodel>=0.0.25",
    "uvicorn>=0.37.0",
]

[tool.uv]
managed = true

#[tool.uv.sources]
# Make workspace packages available to each other

# To support `--package`
[tool.uv.workspace]
members = ["projects/*"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "hatch>=1.14.2",
    "mypy>=1.18.2",
    "poethepoet>=0.37.0",
    "polylith-cli>=1.35.0",
    "pytest>=8.4.2",
    "ruff>=0.13.3",
]

[tool.poe.tasks]
format = "ruff format ."
lint = "ruff check --fix ."
polycheck = "poly check"
typecheck = "mypy ."
test = "pytest tests"
all = [{ref="format"}, {ref="lint"}, {ref="polycheck"}, {ref="typecheck"}, {ref="test"}]

rest_api = "poe -C projects/rest_api"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build]
dev-mode-dirs = ["components", "bases", "development", "."]

[tool.polylith.bricks]
"bases/time_series/rest_api" = "time_series/rest_api"
"components/time_series/greeting" = "time_series/greeting"

[tool.ruff]
exclude = [
  ".git",
  ".github",
  "__pycache__",
  ".mypy_cache",
  ".ruff_cache",
  "dist",
  ".venv",
  "./development/*.py",
]
line-length = 120

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I"]

[tool.mypy]
mypy_path = "components, bases"
namespace_packages = true
explicit_package_bases = true
plugins = "pydantic.mypy"

#[[tool.mypy.overrides]]
#module = "bad_dependency_here"
#ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--doctest-modules"
