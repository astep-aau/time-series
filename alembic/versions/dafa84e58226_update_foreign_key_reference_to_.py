"""update foreign key reference to datasets table

Revision ID: dafa84e58226
Revises: e54dea3e1c41
Create Date: 2025-10-22 16:28:50.404853

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "dafa84e58226"
down_revision: Union[str, Sequence[str], None] = "e54dea3e1c41"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "datasets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("start_date", sa.DateTime(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_datasets_name"), "datasets", ["name"], unique=True)
    op.create_table(
        "datapoints",
        sa.Column("dataset_id", sa.Integer(), nullable=False),
        sa.Column("time", sa.DateTime(), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["datasets.id"],
        ),
        sa.PrimaryKeyConstraint("dataset_id", "time"),
    )
    op.drop_table("datapoint")
    op.drop_index(op.f("ix_dataset_name"), table_name="dataset")
    op.drop_table("dataset")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dataset",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('dataset_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("start_date", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="dataset_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(op.f("ix_dataset_name"), "dataset", ["name"], unique=True)
    op.create_table(
        "datapoint",
        sa.Column("dataset_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("time", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("value", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["dataset_id"], ["dataset.id"], name=op.f("datapoint_dataset_id_fkey")),
        sa.PrimaryKeyConstraint("dataset_id", "time", name=op.f("datapoint_pkey")),
    )
    op.drop_table("datapoints")
    op.drop_index(op.f("ix_datasets_name"), table_name="datasets")
    op.drop_table("datasets")
    # ### end Alembic commands ###
